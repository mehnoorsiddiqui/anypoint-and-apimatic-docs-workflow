name: Publish Java SDK

on:
  push:
    branches: [ master ]
    paths: spec/**
  workflow_dispatch:

jobs:
  publish-sdk:
    runs-on: ubuntu-latest

    steps:

     - name: Install jq
       run: sudo apt-get install jq    
      
#      checkout repo
     - uses: actions/checkout@v2
       name : checkout-repo
       id: checkout-repo  

#      Zip the contents of the spec directory
     - name: Zip API spec
       working-directory: 'spec'
       run: zip -qq -r api-spec.zip .
       
#      Call APIMatic API to generate SDK
     - name: Generate SDK
       working-directory: 'spec'
       run: curl -v -X POST --url "https://www.apimatic.io/api/code-generations/generate-via-file" --header  "Authorization:X-Auth-Key ${{ secrets.API_KEY }}" --header "Accept:application/json" --header "content-type:multipart/form-data"  --form "file=@api-spec.zip"  --form "template=JAVA_ECLIPSE_JRE_LIB" -o output.json
      
#      Extract 'CodegenId' from API response
     - name: Parse output
       id: parse_output
       working-directory: 'spec'
       run: echo '::set-output name=codegenId::'$(jq -r '.id' output.json)
 
#      Retrieve SDK from APIMatic
     - name: Download SDK
       working-directory: 'spec'
       run: curl -X GET --url "https://www.apimatic.io/api/code-generations/${{ steps.parse_output.outputs.codegenId }}/generated-sdk" --header "Authorization:X-Auth-Key ${{ secrets.API_KEY }}" -o java-sdk.zip
      
#       unzip SDK retrieved from APIMatic
     - name: Extract generated SDK
       working-directory: 'spec'
       run: unzip -qq java-sdk.zip -d java-sdk

     - name: list 
       run: ls
       working-directory: 'spec'

#      checkout the repository where SDK needs to be uploaded
     - name: Check-out static-portal-sdk repo
       uses: actions/checkout@v2
       with:
        repository: 'apimatic/static-portal-sdk'
        ref: 'master'
        token: ${{secrets.ACTIONS_PAT}}
        path: sdk-repo
      
#      Copy generated SDK files to the directory where SDk repository has been cloned
     - name: Copy SDK files
       working-directory: 'spec/java-sdk'
       run: cp -r -f -a . ../../sdk-repo --verbose
      
#      Commit and Push changes to the SDK repo  
     - name: Push updated SDK
       working-directory: 'sdk-repo'
       run: |
         git add .
         git config --global user.name 'sohaibtariq'
         git config --global user.email 'sohaib.tariq@apimatic.com'
         git commit -m "updated via github CI"
         git push origin master     
